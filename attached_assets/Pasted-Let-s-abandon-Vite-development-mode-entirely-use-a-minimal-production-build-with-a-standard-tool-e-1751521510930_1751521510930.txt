Let’s abandon Vite development mode entirely, use a minimal production build with a standard tool (e.g., Vite with a stripped config), and ensure the server serves correctly. This avoids Replit plugin issues and gets us to deployment.

Server Compartment (server/) - Simplify Build and Finalize

Prompt: "Resolve the frontend loading issue in TheAgencyIQ. Create a minimal Vite configuration in vite.config.minimal.js with:
javascript

Collapse

Wrap

Run

Copy
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';

export default defineConfig({
  plugins: [react()],
  build: {
    outDir: 'dist',
    emptyOutDir: true,
    rollupOptions: {
      input: 'client/index.html',
    },
  },
});
Update build-production.sh to run vite build --config vite.config.minimal.js instead of copying raw files, ensuring it compiles TypeScript to JavaScript in dist. Open server/index.ts, configure static serving to use express.static('dist', { setHeaders: (res, path) => { if (path.endsWith('.js')) res.set('Content-Type', 'application/javascript'); } }) and serve dist/index.html as the entry point. Run ./build-production.sh and restart with Restarted Start application, testing the app on port 5000 for main.js loading without MIME errors. Then, finalize server/PostQuotaService.ts with a dynamic 30-day cycle from each customer’s subscription date, enforcing 52 posts per 10 customers (520 total) with postApproved() deducting quota post-publishing. Integrate eventSchedulingService.ts for Queensland events within each user’s window. Update server/auto-posting-enforcer.ts to publish 520 posts to platforms, logging in data/quota-debug.log with /api/notify-expired for failures. Test with npx tsx test-comprehensive-quota-fix.js (6/6 pass) for 10 users with varied start dates (July 3, 5, 10, 15, 20). Update deploy.sh to use ./build-production.sh && node server/index.js and document in replit.md, avoiding OAuth changes. If this fails, roll back to the checkpoint from 24 minutes ago and rebuild."