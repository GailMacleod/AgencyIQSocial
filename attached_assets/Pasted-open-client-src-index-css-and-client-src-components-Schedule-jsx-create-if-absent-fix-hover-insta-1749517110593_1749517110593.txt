open client/src/index.css and client/src/components/Schedule.jsx (create if absent), fix hover instability for auto-generated posts on the schedule page: 1) In index.css, add .auto-post-tooltip { z-index: 10; pointer-events: none; } and .auto-post { position: relative; z-index: 1; } to layer tooltips, ensuring .approve-button { z-index: 20; } stays clickable. 2) In Schedule.jsx, add an onMouseOver event to .auto-post elements to stop propagation, logging 'Auto-post hover stabilized on [date]' if successful. Commit with message 'fix-auto-post-hover-instability' without deploying. Ensure no unauthorized changes beyond this addition."
Instructions:
Open client/src/index.css in Replit.
Apply the prompt as written.
Add to client/src/index.css:
css

Collapse

Wrap

Copy
.auto-post {
  position: relative;
  z-index: 1;
}
.auto-post-tooltip {
  z-index: 10;
  pointer-events: none;
}
.approve-button {
  z-index: 20;
}
Create or open client/src/components/Schedule.jsx (if not exists, create with React structure):
javascript

Collapse

Wrap

Run

Copy
import React from 'react';

const Schedule = () => {
  const handleMouseOver = (e, date) => {
    if (e.target.classList.contains('auto-post')) {
      e.stopPropagation();
      console.log('Auto-post hover stabilized on ' + date);
      // Existing hover logic for auto-post-tooltip
    }
  };

  return (
    <div className="schedule-container">
      <div className="calendar-grid">
        {['10', '11', '12', '13', '14', '15', '16'].map(date => (
          <div
            key={date}
            className={date === '12' ? 'auto-post date-cell' : 'date-cell'} // Simulate auto-generated post on date 12
            onMouseOver={(e) => handleMouseOver(e, date)}
          >
            {date}
            {date === '12' && <div className="auto-post-tooltip">Auto-generated post for {date}</div>}
            <button className="approve-button">approve and post</button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Schedule;
Ensure Schedule.jsx is imported in your app’s main component (e.g., App.jsx as <Schedule />), and adjust class names (.auto-post, .auto-post-tooltip, .approve-button, .date-cell) to match your existing code (e.g., use .schedule-day or .post-item if different, based on the screenshot’s structure).
Save the file(s).
Go to the Git tab, commit with "fix-auto-post-hover-instability" (do not deploy).
Run locally (e.g., NODE_ENV=production tsx server/index.ts), access /schedule on https://app.theagencyiq.ai using a mobile/desktop browser, log in with testuser@agencyiq.com / TestPass123!, hover over an auto-generated post (e.g., date 12), verify the tooltip appears without flickering, move the cursor to the “approve and post” button, click it, check console for the log, and confirm scheduling/oEmbed functionality at 10:59 AM AEST.
Report the outcome (e.g., hover stable, button clickable, auto-post functionality intact) and any issues.