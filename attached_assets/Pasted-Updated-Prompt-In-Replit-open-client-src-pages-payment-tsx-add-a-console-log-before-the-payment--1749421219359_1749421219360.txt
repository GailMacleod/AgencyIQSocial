Updated Prompt: "In Replit, open client/src/pages/payment.tsx, add a console log before the payment form submission to check if the logged-in user’s email is 'testuser@agencyiq.com' and the card number is '4545454545454545'. If true, prevent the real Stripe submission, log 'Mock payment successful for testuser@agencyiq.com with 4545454545454545', update only this user’s state to include subscriptions { starter: true, growth: true, professional: true } using the current user context, and add a flag 'isTestMode' to enable this mock only for this user. If false, proceed with normal Stripe submission and log 'Live payment attempted'. Commit with message 'add-secure-mock-payment' without deploying. Ensure no unauthorized changes beyond this addition."
Instructions:
Open client/src/pages/payment.tsx in Replit (create if absent, mimicking your payment form with a card input and user context, e.g., from a global state or session).
Apply the updated prompt as written.
Add a check (e.g., if (currentUser.email === 'testuser@agencyiq.com' && cardNumber === '4545454545454545')) before the Stripe payment method call, where currentUser.email is from your app’s auth state (adjust based on your implementation, e.g., Redux, Context).
If true, log console.log('Mock payment successful for testuser@agencyiq.com with 4545454545454545');, set isTestMode: true in the user context, and update subscriptions: { starter: true, growth: true, professional: true } for this user only.
If false, log console.log('Live payment attempted'); and proceed with Stripe.
Save the file.
Go to the Git tab, commit with "add-secure-mock-payment" (do not deploy).
Visit https://agency-iq-social-GailMac.replit.app/payment (or navigate via the app), log in as testuser@agencyiq.com with TestPass123!, enter 4545454545454545 with any future date and CVC (e.g., 12/30, 123), submit, check console for the mock log and verify subscription access at 08:21 AM AEST.
Report the outcome (e.g., mock log present, subscriptions active for test user only) and any issues.
Validation:
If no log appears, ensure currentUser.email is accessible (e.g., from your auth provider) and the card input is captured.
If subscriptions update for other users, verify the user context isolation (e.g., use a user-specific ID check).
If the live payment triggers, confirm the if condition logic.
Confirm, report Replit overreach.